1 新建一个原程序 Orgin.java     商家--被代理对象
2 新建一个功能程序  Timer.java   快递公司--代理对象
3 在services.xml Spring配置文件中构建以上两个bean
  代码示例
	<!-- 商家  被代理对象 -->
	<bean id="orgin" class="com.chinasofti.bean.Orgin"></bean>
	<!-- 快递公司  代理对象 负责送货-->
	<bean id="timer" class="com.chinasofti.test01.Timer"></bean>
4 编写 Spring配置文件  services.xml
	-编写AOP根标签 <aop:config>
	  -子标签<aop:pointcut>  切入点【expression  id】  通过编写表达式 指定原程序(Orgin.java) 中 哪些方法需要被增强
	  -子标签<aop:aspect>    切面    【ref="timer"】指定要增强的功能类(Timer.java) 
	   -子标签<aop:before>   通知(前置通知) 【method:指定应用增强类的哪个方法    poincut-ref：指向切入点 <aop:pointcut>标签中的id属性值 】
  代码示例
  <aop:config>
		<aop:pointcut expression="execution(void com.chinasofti.bean.Orgin.*(..) )" id="orginCut" />
		<aop:aspect ref="timer">
			<aop:before method="showTime" pointcut-ref="orginCut" /> 
		</aop:aspect>
	</aop:config>	   

知识点讲解  切入点expression的编写
--------------------------------------------------------------------------------------
按类匹配within
匹配到类  com.chinasofti包名  Target类名
<aop:pointcut id="targetPintcut" expression="within(com.chinasofti.Target)"/>
匹配到包下的所有类
 <aop:pointcut id="targetPintcut"  expression="within(com.chinasofti.*)"/>
匹配到包下及子包下的所有类	
<aop:pointcut id="targetPintcut"  expression="within(com..*)"/>

-----------------------------------------------------------------------------------
按函数匹配 execution
完整写法
		     返回类型                   包名                            类名             方法名        参数类型（用，分开）
		  String   com.chiansofti   Target     save   (String,int)
示例		execution(String com.chinasofti.Target.save(String))

任意返回类型
execution(* com.chinasofti.Target.save(String))
任意返回类型下指定包下任意类
execution(* com.chinasofti.*.save(String))
任意返回类型下指定包下任意类任意函数
execution(* com.chinasofti.*.*(String))
任意返回类型下指定包或子包下任意类任意函数任意参数
execution(* com..*.*(..))




