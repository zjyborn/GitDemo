<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 商家  被代理对象 -->
	<bean id="orgin" class="com.hwua.bean.Orgin"></bean>
	<bean id="target" class="com.hwua.bean.Target"></bean>
	<!-- 快递公司  代理对象 负责送货-->
	<bean id="timer" class="com.hwua.test01.Timer"></bean>

	<!-- 
	aop:pointcut 切入点   指定在原程序什么地方(哪些方法) 嵌入内容
	aop:aspect 切面  指定代理对象 即将放入原程序的 程序
	 -->
	<!-- 配置AOP 根标签 -->
	<aop:config>
		<!-- 找到切入点程序 找到刀口 需要增强的类 方法 所在的位置 -->
		<!-- expression 指定切入的地方 com.hwua.bean.Orgin类 所有无返回值 任意个参数的方法 -->
		<!-- <aop:pointcut expression="execution(void com.hwua.bean.Orgin.*(..) )" id="orginCut" /> -->
		<!-- com.hwua.bean 包下Orgin类的所有方法-->
		<!-- <aop:pointcut expression="within(com.hwua.bean.Orgin)" id="orginCut" /> -->
		<!-- com.hwua.bean 包下所有类的所有方法-->
		<aop:pointcut expression="within(com.hwua.bean.*)" id="orginCut" />
		<!-- 指定切面程序 指定增强类 功能性类 并通过advicer 组配 指定功能类在原始类中方法中具体的位置 -->
		<aop:aspect ref="timer">
			<!-- 前置通知  method 指定切面类中哪个方法(代理对象哪个方法) -->
			<aop:before method="showTime" pointcut-ref="orginCut" /> 
			<!-- 后置通知 -->
			<!--  <aop:after-returning method="showTime"
				pointcut-ref="orginCut" />-->
		</aop:aspect>
	</aop:config>
</beans>
